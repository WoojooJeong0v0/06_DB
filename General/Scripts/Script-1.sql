
SELECT EMP_ID, EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY > 4000000;


-- 입력받은 최소 급여 이상, 최대 급여 이하를 받는 
SELECT EMP_ID, EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY BETWEEN 4000000 AND 6000000
ORDER BY SALARY DESC;


--  부서명 입력받아 해당 부서에 근무하는 사원 사번 이름 부서명 직급명
-- 직급 코드 오름차순 조회

SELECT e.EMP_ID, e.EMP_NAME, d.DEPT_TITLE, j.JOB_NAME
FROM EMPLOYEE e
JOIN JOB j ON e.JOB_CODE = j.JOB_CODE
JOIN DEPARTMENT d ON e.DEPT_CODE = d.DEPT_ID
WHERE DEPT_TITLE = '인사관리부'
ORDER BY e.JOB_CODE ASC;

SELECT * FROM DEPARTMENT;

-- 테이블 생성
-- TB_USER 

CREATE TABLE TB_USER(
	USER_NO NUMBER CONSTRAINT TB_USER_PK PRIMARY KEY,
	USER_ID VARCHAR2(30) NOT NULL,
	USER_PW VARCHAR2(30) NOT NULL,
	USER_NAME VARCHAR2(30) NOT NULL,
	ENROLL_DATE DATE DEFAULT CURRENT_DATE
);

COMMENT ON COLUMN TB_USER.USER_NO IS '사용자 번호';
COMMENT ON COLUMN TB_USER.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN TB_USER.USER_PW IS '사용자 패스워드';
COMMENT ON COLUMN TB_USER.USER_NAME IS '사용자 이름';
COMMENT ON COLUMN TB_USER.ENROLL_DATE IS '사용자 가입일';

-- USER_NO 컬럼 삽입될 시퀀스 생성
 
CREATE SEQUENCE SEQ_USER_NO NOCACHE;

-- 샘플 데이터 인서트
INSERT INTO TB_USER
VALUES(SEQ_USER_NO.NEXTVAL, 'user01', 'pass01', '유저일', default);

SELECT * FROM TB_USER;

COMMIT;

-- 6
UPDATE TB_USER
SET 
 USER_NAME = '홍길동'
WHERE USER_id = 'user01' 
AND USER_PW = 'pass01';

-- 아이디, 비밀번호 일치 -> 수정 성공 1
-- 아이디, 비밀번호 불일치 -> 수정 실패 0

ROLLBACK;